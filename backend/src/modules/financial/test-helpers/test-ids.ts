/**
 * Test ID Generator
 *
 * Provides valid UUIDs for testing instead of mock strings
 */

import { randomUUID } from 'crypto';

// Deterministic UUIDs for consistent testing
export const TEST_IDS = {
  // Tenants
  TENANT_1: '00000000-0000-0000-0000-000000000001',
  TENANT_2: '00000000-0000-0000-0000-000000000002',

  // Users
  USER_1: '00000000-0000-0000-0000-000000000101',
  USER_2: '00000000-0000-0000-0000-000000000102',
  USER_APPROVER: '00000000-0000-0000-0000-000000000103',

  // Categories
  CATEGORY_OFFICE: '00000000-0000-0000-0000-000000000201',
  CATEGORY_TRAVEL: '00000000-0000-0000-0000-000000000202',
  CATEGORY_EQUIPMENT: '00000000-0000-0000-0000-000000000203',

  // Vendors/Suppliers
  VENDOR_1: '00000000-0000-0000-0000-000000000301',
  VENDOR_2: '00000000-0000-0000-0000-000000000302',

  // Customers
  CUSTOMER_1: '00000000-0000-0000-0000-000000000401',
  CUSTOMER_2: '00000000-0000-0000-0000-000000000402',

  // Jurisdictions
  JURISDICTION_BR: '00000000-0000-0000-0000-000000000501',
  JURISDICTION_US: '00000000-0000-0000-0000-000000000502',
  JURISDICTION_EE: '00000000-0000-0000-0000-000000000503',

  // Accounts
  ACCOUNT_REVENUE: '00000000-0000-0000-0000-000000000601',
  ACCOUNT_EXPENSE: '00000000-0000-0000-0000-000000000602',
  ACCOUNT_ASSET: '00000000-0000-0000-0000-000000000603',
  ACCOUNT_LIABILITY: '00000000-0000-0000-0000-000000000604',

  // Departments
  DEPARTMENT_IT: '00000000-0000-0000-0000-000000000701',
  DEPARTMENT_SALES: '00000000-0000-0000-0000-000000000702',
} as const;

/**
 * Generate a random UUID for dynamic test data
 */
export const generateTestId = (): string => randomUUID();

/**
 * Generate multiple test IDs
 */
export const generateTestIds = (count: number): string[] => {
  return Array.from({ length: count }, () => generateTestId());
};
